#!/usr/bin/env bash


### Create a database backup.

set -o errexit
set -o pipefail
set -o nounset


working_dir="$(dirname ${0})"
source "${working_dir}/_sourced/constants.sh"
source "${working_dir}/_sourced/messages.sh"


message_welcome "Backup up the '${POSTGRES_DB}' database..."


if [[ "${POSTGRES_USER}" == "postgres" ]]; then
    message_error "Backing up as 'postgres' user is not supported. Assign 'POSTGRES_USER' env with another one and try again."
    exit 1
fi

# Ensure backup directory exists
if [[ ! -d "${BACKUP_DIR_PATH}" ]]; then
    mkdir -p "${BACKUP_DIR_PATH}"
    message_info "Created backup directory '${BACKUP_DIR_PATH}'."
fi

export PGHOST="${POSTGRES_HOST}"
export PGPORT="${POSTGRES_PORT}"
export PGUSER="${POSTGRES_USER}"
export PGPASSWORD="${POSTGRES_PASSWORD}"
export PGDATABASE="${POSTGRES_DB}"

backup_dir="${BACKUP_DIR_PATH}/backup_$(date +'%Y%m%d')"

# Perform the backup using parallel jobs (e.g., 4 parallel jobs)
if ! pg_dump -Fd -j 4 -f "${backup_dir}"; then
    message_error "Failed to backup '${POSTGRES_DB}' in parallel."
    exit 1
fi

message_success "'${POSTGRES_DB}' database backup has been created and placed in '${BACKUP_DIR_PATH}'."